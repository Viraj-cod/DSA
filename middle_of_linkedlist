class Node:
    def __init__(self, value):
        self.value = value
        self.next = None
        

class LinkedList:
    def __init__(self, value):
        new_node = Node(value)
        self.head = new_node
        self.tail = new_node
        self.length=1

        
    def append(self, value):
        new_node = Node(value)
        if self.head == None:
            self.head = new_node
            self.tail = new_node
        else:
            self.tail.next = new_node
            self.tail = new_node
        self.length+=1
        return True
        
    def find(self,ind):
        temp=self.head
        for _ in range(ind):
            temp = temp.next
        return temp
        
    def find_middle_node(self):
        if self.length==0:
            return None
        if self.length==1:
            return self.head
        if self.length % 2 == 1:
            return self.find(self.length//2)
        else:
            return self.find(self.length//2)
        
my_linked_list = LinkedList(1)
my_linked_list.append(2)
my_linked_list.append(3)
my_linked_list.append(4)
my_linked_list.append(5)

print( my_linked_list.find_middle_node().value )

