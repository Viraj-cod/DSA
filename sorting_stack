class Stack:
    def __init__(self):
        self.stack_list = []

    def print_stack(self):
        print(self.stack_list)
        for i in range(len(self.stack_list)-1, -1, -1):
            print(self.stack_list[i])

    def is_empty(self):
        return len(self.stack_list) == 0

    def peek(self):
        if self.is_empty():
            return None
        else:
            return self.stack_list[-1]

    def size(self):
        return len(self.stack_list)

    def push(self, value):
        self.stack_list.append(value)

    def pop(self):
        if len(self.stack_list) == 0:
            return
        return self.stack_list.pop()
 
def sort_stack(original_stack):
    temp_stack = Stack()
    
    while not original_stack.is_empty():
        temp = original_stack.pop()

        while not temp_stack.is_empty() and temp_stack.peek() > temp:
            original_stack.push(temp_stack.pop())

        temp_stack.push(temp)
    while not temp_stack.is_empty():
        original_stack.push(temp_stack.pop())

my_stack = Stack()
my_stack.push(2)
my_stack.push(4)
my_stack.push(1)
my_stack.push(3)
sort_stack(my_stack)
my_stack.print_stack()
