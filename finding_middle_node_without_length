class node:
    def __init__(self,val):
        self.val=val
        self.next=None
    
class ll:
    def __init__(self,val):
        new=node(val)
        self.head=new
        self.tail=new
    
    def append(self,val):
        new=node(val)
        if self.head is None:
            self.head=new
            self.tail=new
        else:
            self.tail.next=new
            self.tail=new
        return True
    
    def display(self):
        temp=self.head
        while temp:
            print(temp.val,end='->')
            temp=temp.next
        print(None)
    
    def middle_one(self):
        if self.head is None:
            return None
        slow,fast=self.head,self.head
        while fast is not None and fast.next is not None:
            slow=slow.next
            fast=fast.next.next
        return slow.val
        
Rll=ll(8)
Rll.append(9)
Rll.append(4)
Rll.append(2)
Rll.append(3)
#Rll.append(6)
#Rll.append(4)
#Rll.display()
#Rll.rev()
print(Rll.middle_one())
